// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicApp.Infrastructure;

#nullable disable

namespace MusicApp.Infrastructure.Migrations
{
    [DbContext(typeof(MusicAppDbContext))]
    partial class MusicAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicApp.Domain.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MainArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MainArtistId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MainArtistId = 2,
                            ReleaseDate = new DateTime(2016, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Starboy"
                        },
                        new
                        {
                            Id = 2,
                            MainArtistId = 3,
                            ReleaseDate = new DateTime(2011, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Rolling Papers"
                        },
                        new
                        {
                            Id = 3,
                            MainArtistId = 3,
                            ReleaseDate = new DateTime(2014, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Blacc Hollywood"
                        },
                        new
                        {
                            Id = 4,
                            MainArtistId = 1,
                            ReleaseDate = new DateTime(2000, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Marshall Mathers"
                        },
                        new
                        {
                            Id = 5,
                            MainArtistId = 1,
                            ReleaseDate = new DateTime(2020, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Music to Be Murdered By"
                        });
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RealName = "Marshall Mathers",
                            StageName = "Eminem"
                        },
                        new
                        {
                            Id = 2,
                            RealName = "Abel Makkonen Tesfaye",
                            StageName = "The Weeknd"
                        },
                        new
                        {
                            Id = 3,
                            RealName = "Cameron Jibril Thomaz",
                            StageName = "Wiz Khalifa"
                        });
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.ArtistAlbum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistId");

                    b.ToTable("ArtistAlbums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            ArtistId = 2
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 2,
                            ArtistId = 3
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 3,
                            ArtistId = 3
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 5,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.ArtistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSongs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            SongId = 4
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            SongId = 5
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 2,
                            SongId = 3
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 3,
                            SongId = 1
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 3,
                            SongId = 2
                        });
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<int>("MainArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MainArtistId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = 4,
                            MainArtistId = 3,
                            Title = "Black and Yellow"
                        },
                        new
                        {
                            Id = 2,
                            Genre = 4,
                            MainArtistId = 3,
                            Title = "So High"
                        },
                        new
                        {
                            Id = 3,
                            Genre = 11,
                            MainArtistId = 2,
                            Title = "Starboy"
                        },
                        new
                        {
                            Id = 4,
                            Genre = 4,
                            MainArtistId = 1,
                            Title = "Marshall Mathers"
                        },
                        new
                        {
                            Id = 5,
                            Genre = 4,
                            MainArtistId = 1,
                            Title = "No Regrets"
                        });
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.Album", b =>
                {
                    b.HasOne("MusicApp.Domain.Entities.Artist", "MainArtist")
                        .WithMany()
                        .HasForeignKey("MainArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainArtist");
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.ArtistAlbum", b =>
                {
                    b.HasOne("MusicApp.Domain.Entities.Album", "Album")
                        .WithMany("ArtistsAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApp.Domain.Entities.Artist", "Artist")
                        .WithMany("ArtistsAlbums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.ArtistSong", b =>
                {
                    b.HasOne("MusicApp.Domain.Entities.Artist", "Artist")
                        .WithMany("ArtistsSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApp.Domain.Entities.Song", "Song")
                        .WithMany("ArtistsSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.Song", b =>
                {
                    b.HasOne("MusicApp.Domain.Entities.Artist", "MainArtist")
                        .WithMany()
                        .HasForeignKey("MainArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainArtist");
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.Album", b =>
                {
                    b.Navigation("ArtistsAlbums");
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.Artist", b =>
                {
                    b.Navigation("ArtistsAlbums");

                    b.Navigation("ArtistsSongs");
                });

            modelBuilder.Entity("MusicApp.Domain.Entities.Song", b =>
                {
                    b.Navigation("ArtistsSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
